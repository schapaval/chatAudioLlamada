//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.10
//
// <auto-generated>
//
// Generated from file `Chat.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package ChatApp;

public interface ChatPrx extends Ice.ObjectPrx
{
    public void sendMessage(String sender, String recipient, String content);

    public void sendMessage(String sender, String recipient, String content, java.util.Map<String, String> context);

    public Ice.AsyncResult begin_sendMessage(String sender, String recipient, String content);

    public Ice.AsyncResult begin_sendMessage(String sender, String recipient, String content, java.util.Map<String, String> context);

    public Ice.AsyncResult begin_sendMessage(String sender, String recipient, String content, Ice.Callback cb);

    public Ice.AsyncResult begin_sendMessage(String sender, String recipient, String content, java.util.Map<String, String> context, Ice.Callback cb);

    public Ice.AsyncResult begin_sendMessage(String sender, String recipient, String content, Callback_Chat_sendMessage cb);

    public Ice.AsyncResult begin_sendMessage(String sender, String recipient, String content, java.util.Map<String, String> context, Callback_Chat_sendMessage cb);

    public Ice.AsyncResult begin_sendMessage(String sender,
                                             String recipient,
                                             String content,
                                             IceInternal.Functional_VoidCallback responseCb,
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> exceptionCb);

    public Ice.AsyncResult begin_sendMessage(String sender,
                                             String recipient,
                                             String content,
                                             IceInternal.Functional_VoidCallback responseCb,
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> exceptionCb,
                                             IceInternal.Functional_BoolCallback sentCb);

    public Ice.AsyncResult begin_sendMessage(String sender,
                                             String recipient,
                                             String content,
                                             java.util.Map<String, String> context,
                                             IceInternal.Functional_VoidCallback responseCb,
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> exceptionCb);

    public Ice.AsyncResult begin_sendMessage(String sender,
                                             String recipient,
                                             String content,
                                             java.util.Map<String, String> context,
                                             IceInternal.Functional_VoidCallback responseCb,
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> exceptionCb,
                                             IceInternal.Functional_BoolCallback sentCb);

    public void end_sendMessage(Ice.AsyncResult result);

    public void makeCall(String caller, String callee);

    public void makeCall(String caller, String callee, java.util.Map<String, String> context);

    public Ice.AsyncResult begin_makeCall(String caller, String callee);

    public Ice.AsyncResult begin_makeCall(String caller, String callee, java.util.Map<String, String> context);

    public Ice.AsyncResult begin_makeCall(String caller, String callee, Ice.Callback cb);

    public Ice.AsyncResult begin_makeCall(String caller, String callee, java.util.Map<String, String> context, Ice.Callback cb);

    public Ice.AsyncResult begin_makeCall(String caller, String callee, Callback_Chat_makeCall cb);

    public Ice.AsyncResult begin_makeCall(String caller, String callee, java.util.Map<String, String> context, Callback_Chat_makeCall cb);

    public Ice.AsyncResult begin_makeCall(String caller,
                                          String callee,
                                          IceInternal.Functional_VoidCallback responseCb,
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> exceptionCb);

    public Ice.AsyncResult begin_makeCall(String caller,
                                          String callee,
                                          IceInternal.Functional_VoidCallback responseCb,
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> exceptionCb,
                                          IceInternal.Functional_BoolCallback sentCb);

    public Ice.AsyncResult begin_makeCall(String caller,
                                          String callee,
                                          java.util.Map<String, String> context,
                                          IceInternal.Functional_VoidCallback responseCb,
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> exceptionCb);

    public Ice.AsyncResult begin_makeCall(String caller,
                                          String callee,
                                          java.util.Map<String, String> context,
                                          IceInternal.Functional_VoidCallback responseCb,
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> exceptionCb,
                                          IceInternal.Functional_BoolCallback sentCb);

    public void end_makeCall(Ice.AsyncResult result);

    public void createGroup(String groupName, String[] members);

    public void createGroup(String groupName, String[] members, java.util.Map<String, String> context);

    public Ice.AsyncResult begin_createGroup(String groupName, String[] members);

    public Ice.AsyncResult begin_createGroup(String groupName, String[] members, java.util.Map<String, String> context);

    public Ice.AsyncResult begin_createGroup(String groupName, String[] members, Ice.Callback cb);

    public Ice.AsyncResult begin_createGroup(String groupName, String[] members, java.util.Map<String, String> context, Ice.Callback cb);

    public Ice.AsyncResult begin_createGroup(String groupName, String[] members, Callback_Chat_createGroup cb);

    public Ice.AsyncResult begin_createGroup(String groupName, String[] members, java.util.Map<String, String> context, Callback_Chat_createGroup cb);

    public Ice.AsyncResult begin_createGroup(String groupName,
                                             String[] members,
                                             IceInternal.Functional_VoidCallback responseCb,
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> exceptionCb);

    public Ice.AsyncResult begin_createGroup(String groupName,
                                             String[] members,
                                             IceInternal.Functional_VoidCallback responseCb,
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> exceptionCb,
                                             IceInternal.Functional_BoolCallback sentCb);

    public Ice.AsyncResult begin_createGroup(String groupName,
                                             String[] members,
                                             java.util.Map<String, String> context,
                                             IceInternal.Functional_VoidCallback responseCb,
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> exceptionCb);

    public Ice.AsyncResult begin_createGroup(String groupName,
                                             String[] members,
                                             java.util.Map<String, String> context,
                                             IceInternal.Functional_VoidCallback responseCb,
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> exceptionCb,
                                             IceInternal.Functional_BoolCallback sentCb);

    public void end_createGroup(Ice.AsyncResult result);

    public void sendVoiceNote(String sender, String recipient, byte[] voiceData);

    public void sendVoiceNote(String sender, String recipient, byte[] voiceData, java.util.Map<String, String> context);

    public Ice.AsyncResult begin_sendVoiceNote(String sender, String recipient, byte[] voiceData);

    public Ice.AsyncResult begin_sendVoiceNote(String sender, String recipient, byte[] voiceData, java.util.Map<String, String> context);

    public Ice.AsyncResult begin_sendVoiceNote(String sender, String recipient, byte[] voiceData, Ice.Callback cb);

    public Ice.AsyncResult begin_sendVoiceNote(String sender, String recipient, byte[] voiceData, java.util.Map<String, String> context, Ice.Callback cb);

    public Ice.AsyncResult begin_sendVoiceNote(String sender, String recipient, byte[] voiceData, Callback_Chat_sendVoiceNote cb);

    public Ice.AsyncResult begin_sendVoiceNote(String sender, String recipient, byte[] voiceData, java.util.Map<String, String> context, Callback_Chat_sendVoiceNote cb);

    public Ice.AsyncResult begin_sendVoiceNote(String sender,
                                               String recipient,
                                               byte[] voiceData,
                                               IceInternal.Functional_VoidCallback responseCb,
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> exceptionCb);

    public Ice.AsyncResult begin_sendVoiceNote(String sender,
                                               String recipient,
                                               byte[] voiceData,
                                               IceInternal.Functional_VoidCallback responseCb,
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> exceptionCb,
                                               IceInternal.Functional_BoolCallback sentCb);

    public Ice.AsyncResult begin_sendVoiceNote(String sender,
                                               String recipient,
                                               byte[] voiceData,
                                               java.util.Map<String, String> context,
                                               IceInternal.Functional_VoidCallback responseCb,
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> exceptionCb);

    public Ice.AsyncResult begin_sendVoiceNote(String sender,
                                               String recipient,
                                               byte[] voiceData,
                                               java.util.Map<String, String> context,
                                               IceInternal.Functional_VoidCallback responseCb,
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> exceptionCb,
                                               IceInternal.Functional_BoolCallback sentCb);

    public void end_sendVoiceNote(Ice.AsyncResult result);
}
